
FIND 33:
Given a list of ints, return True if the array contains a 3 next to a 3 somewhere.

has_33([1, 3, 3]) ? True
has_33([1, 3, 1, 3]) ? False
has_33([3, 1, 3]) ? False


def has_33(*args):
    my_list = list(args)
    for i in range(len(my_list)-1): #no need to go to the end of list, because we need to check the second to last number against the last number
        if my_list[i] == 3 and my_list[i+1] == 3:
            return True
        else:
            return False




PAPER DOLL: Given a string, return a string where for every character in the original there are three characters
paper_doll('Hello') --> 'HHHeeellllllooo'
paper_doll('Mississippi') --> 'MMMiiissssssiiippppppiii'


def paper_doll(text):
    result = ''

    for char in text:
        result += char*3
    return result

#Better:


def paper_doll(text):
    return "".join([char * 3 for char in text])





BLACKJACK: Given three integers between 1 and 11, if their sum is less than or equal to 21, return their sum. If their sum exceeds 21 and there's an eleven, reduce the total sum by 10. Finally, if the sum (even after adjustment) exceeds 21, return 'BUST'
blackjack(5,6,7) --> 18
blackjack(9,9,9) --> 'BUST'
blackjack(9,9,11) --> 19

def blackjack(n1, n2, n3):
    nums = (n1, n2, n3)
    num_sum = (n1 + n2 + n3)
    
    if(num_sum) <= 21:
        return num_sum
    elif (num_sum) > 21 and 11 in (nums):
        return num_sum - 10
    else:
        return "BUST"





SUMMER OF '69: Return the sum of the numbers in the array, except ignore sections of numbers starting with a 6 and extending to the next 9 (every 6 will be followed by at least one 9). Return 0 for no numbers.
summer_69([1, 3, 5]) --> 9
summer_69([4, 5, 6, 7, 8, 9]) --> 9
summer_69([2, 1, 6, 9, 11]) --> 14

def summer_69(arr):

    total = 0
    add = True

    for num in arr:
        while add:
            if num!= 6:
                total += num
                break
            else:
                add = False
        while not add:
            if num != 9:
                break
            else:
                add = True
                break

    return total


